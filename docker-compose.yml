version: "3"

services:
  
  users-db:
    image: 'postgres:latest'
    container_name: users-db
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=users
    healthcheck:
      test: exit 0

  departments-db:
    image: 'postgres:latest'
    container_name: departments-db
    ports:
      - 5434:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=departments
    healthcheck:
      test: exit 0


  user-service:
    build:
      context: /user-service
      dockerfile: /Dockerfile
    ports:
      - 8081:8081
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5433/users
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      users-db:
        condition: service_healthy
    links:
      - users-db

  department-service:
    build:
      context: /department-service
      dockerfile: /Dockerfile
    ports:
    - 8082:8082
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5434/departments
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      departments-db:
        condition: service_healthy
      user-service:
        condition: service_started
    links:
      - departments-db
      - user-service

  krakend_ce:
    build:
      context: .
      dockerfile: Dockerfile
    image: devopsfaith/krakend:2.1.3
    ports:
      - "1234:1234"
      - "8080:8080"
      - "8090:8090"
      - "8091:8091"
    depends_on:
      user-service:
        condition: service_started
      department-service:
        condition: service_started
    links:
      - user-service
      - department-service

  jaeger-allinone:
    image: jaegertracing/all-in-one:latest
    ports:
      - 6831:6831/udp
      - 6832:6832/udp
      - 16686:16686
      - 16685:16685
      - 14268:14268
      - 5775:5775/udp
      - 5778:5778
      - 14250:14250
      - 9411:9411
    depends_on:
      krakend_ce:
        condition: service_started

    links:
      - krakend_ce

  influxdb:
    image: influxdb:1.8.10
    environment:
      - "INFLUXDB_DB=krakend"
      - "INFLUXDB_USER=kraken"
      - "INFLUXDB_USER_PASSWORD=pass"
      - "INFLUXDB_ADMIN_USER=admin"
      - "INFLUXDB_ADMIN_PASSWORD=admin"
    ports:
      - "8086:8086"

  grafana:
    build: './config/grafana'
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      monitoring:
        aliases:
          - grafana
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    networks:
      monitoring:
        aliases:
          - prometheus

  keycloak-db:
    image: 'postgres:latest'
    container_name: keycloak-db
    ports:
      - 5435:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=keycloak
    networks:
      - local-keycloak

  keycloak:
    depends_on:
      - keycloak-db
    container_name: local_keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: keycloak-db
      DB_DATABASE: keycloak
      DB_USER: postgres
      DB_PASSWORD: postgres
      KEYCLOAK_USER: admin1
      KEYCLOAK_PASSWORD: admin1
    image: jboss/keycloak
    ports:
      - "8484:8080"
    networks:
      - local-keycloak


networks:
  monitoring:
  local-keycloak: