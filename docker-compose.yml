version: "3"

services:
  
  users-db:
    image: 'postgres:latest'
    container_name: users-db
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=users
    healthcheck:
      test: exit 0

  departments-db:
    image: 'postgres:latest'
    container_name: departments-db
    ports:
      - 5434:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=departments
    healthcheck:
      test: exit 0


  user-service:
    build:
      context: /user-service
      dockerfile: /Dockerfile
    ports:
      - 8081:8081
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5433/users
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      users-db:
        condition: service_healthy
    links:
      - users-db

  department-service:
    build:
      context: /department-service
      dockerfile: /Dockerfile
    ports:
    - 8082:8082
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5434/departments
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      departments-db:
        condition: service_healthy
      user-service:
        condition: service_started
    links:
      - departments-db
      - user-service

  krakend_ce:
    build:
      context: .
      dockerfile: Dockerfile
    image: devopsfaith/krakend:2.1.3
    ports:
      - "1234:1234"
      - "8080:8080"
      - "8090:8090"
    depends_on:
      user-service:
        condition: service_started
      department-service:
        condition: service_started
    links:
      - user-service
      - department-service